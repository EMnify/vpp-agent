// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: /usr/share/vpp/api/plugins/gtpu.api.json

/*
Package gtpu is a generated VPP binary API for 'gtpu' module.

It consists of:
	 10 enums
	  6 aliases
	  6 types
	  1 union
	 15 messages
	  7 services
*/
package gtpu

import (
	bytes "bytes"
	context "context"
	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
	io "io"
	strconv "strconv"

	interface_types "go.ligato.io/vpp-agent/v3/plugins/vpp/binapi/vpp2001/interface_types"
	ip_types "go.ligato.io/vpp-agent/v3/plugins/vpp/binapi/vpp2001/ip_types"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "gtpu"
	// APIVersion is the API version of this module.
	APIVersion = "3.1.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0xfd59d52f
)

type AddressFamily = ip_types.AddressFamily

type IfStatusFlags = interface_types.IfStatusFlags

type IfType = interface_types.IfType

type IPDscp = ip_types.IPDscp

type IPEcn = ip_types.IPEcn

type IPProto = ip_types.IPProto

type LinkDuplex = interface_types.LinkDuplex

type MtuProto = interface_types.MtuProto

type RxMode = interface_types.RxMode

type SubIfFlags = interface_types.SubIfFlags

type AddressWithPrefix = ip_types.AddressWithPrefix

type InterfaceIndex = interface_types.InterfaceIndex

type IP4Address = ip_types.IP4Address

type IP4AddressWithPrefix = ip_types.IP4AddressWithPrefix

type IP6Address = ip_types.IP6Address

type IP6AddressWithPrefix = ip_types.IP6AddressWithPrefix

type Address = ip_types.Address

type IP4Prefix = ip_types.IP4Prefix

type IP6Prefix = ip_types.IP6Prefix

type Mprefix = ip_types.Mprefix

type Prefix = ip_types.Prefix

type PrefixMatcher = ip_types.PrefixMatcher

type AddressUnion = ip_types.AddressUnion

// GtpuAddDelLocalResponder represents VPP binary API message 'gtpu_add_del_local_responder'.
type GtpuAddDelLocalResponder struct {
	IsAdd   uint8
	Address Address
	VrfID   uint32
}

func (m *GtpuAddDelLocalResponder) Reset()                        { *m = GtpuAddDelLocalResponder{} }
func (*GtpuAddDelLocalResponder) GetMessageName() string          { return "gtpu_add_del_local_responder" }
func (*GtpuAddDelLocalResponder) GetCrcString() string            { return "d4741425" }
func (*GtpuAddDelLocalResponder) GetMessageType() api.MessageType { return api.RequestMessage }

// GtpuAddDelLocalResponderReply represents VPP binary API message 'gtpu_add_del_local_responder_reply'.
type GtpuAddDelLocalResponderReply struct {
	Retval int32
}

func (m *GtpuAddDelLocalResponderReply) Reset() { *m = GtpuAddDelLocalResponderReply{} }
func (*GtpuAddDelLocalResponderReply) GetMessageName() string {
	return "gtpu_add_del_local_responder_reply"
}
func (*GtpuAddDelLocalResponderReply) GetCrcString() string            { return "e8d4e804" }
func (*GtpuAddDelLocalResponderReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// GtpuAddDelTunnel represents VPP binary API message 'gtpu_add_del_tunnel'.
type GtpuAddDelTunnel struct {
	IsAdd          bool
	SrcAddress     Address
	DstAddress     Address
	McastSwIfIndex InterfaceIndex
	EncapVrfID     uint32
	DecapNextIndex uint32
	SrcTeid        uint32
	DstTeid        uint32
}

func (m *GtpuAddDelTunnel) Reset()                        { *m = GtpuAddDelTunnel{} }
func (*GtpuAddDelTunnel) GetMessageName() string          { return "gtpu_add_del_tunnel" }
func (*GtpuAddDelTunnel) GetCrcString() string            { return "2c4409a6" }
func (*GtpuAddDelTunnel) GetMessageType() api.MessageType { return api.RequestMessage }

// GtpuAddDelTunnelReply represents VPP binary API message 'gtpu_add_del_tunnel_reply'.
type GtpuAddDelTunnelReply struct {
	Retval    int32
	SwIfIndex InterfaceIndex
}

func (m *GtpuAddDelTunnelReply) Reset()                        { *m = GtpuAddDelTunnelReply{} }
func (*GtpuAddDelTunnelReply) GetMessageName() string          { return "gtpu_add_del_tunnel_reply" }
func (*GtpuAddDelTunnelReply) GetCrcString() string            { return "5383d31f" }
func (*GtpuAddDelTunnelReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// GtpuLocalResponderDetails represents VPP binary API message 'gtpu_local_responder_details'.
type GtpuLocalResponderDetails struct {
	Address Address
	VrfID   uint32
}

func (m *GtpuLocalResponderDetails) Reset()                        { *m = GtpuLocalResponderDetails{} }
func (*GtpuLocalResponderDetails) GetMessageName() string          { return "gtpu_local_responder_details" }
func (*GtpuLocalResponderDetails) GetCrcString() string            { return "1672dc8a" }
func (*GtpuLocalResponderDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// GtpuLocalResponderDump represents VPP binary API message 'gtpu_local_responder_dump'.
type GtpuLocalResponderDump struct{}

func (m *GtpuLocalResponderDump) Reset()                        { *m = GtpuLocalResponderDump{} }
func (*GtpuLocalResponderDump) GetMessageName() string          { return "gtpu_local_responder_dump" }
func (*GtpuLocalResponderDump) GetCrcString() string            { return "51077d14" }
func (*GtpuLocalResponderDump) GetMessageType() api.MessageType { return api.RequestMessage }

// GtpuSetTunnelDst represents VPP binary API message 'gtpu_set_tunnel_dst'.
type GtpuSetTunnelDst struct {
	SwIfIndex      InterfaceIndex
	DstAddress     Address
	McastSwIfIndex InterfaceIndex
	DstTeid        uint32
}

func (m *GtpuSetTunnelDst) Reset()                        { *m = GtpuSetTunnelDst{} }
func (*GtpuSetTunnelDst) GetMessageName() string          { return "gtpu_set_tunnel_dst" }
func (*GtpuSetTunnelDst) GetCrcString() string            { return "26cc5d2d" }
func (*GtpuSetTunnelDst) GetMessageType() api.MessageType { return api.RequestMessage }

// GtpuSetTunnelDstReply represents VPP binary API message 'gtpu_set_tunnel_dst_reply'.
type GtpuSetTunnelDstReply struct {
	Retval int32
}

func (m *GtpuSetTunnelDstReply) Reset()                        { *m = GtpuSetTunnelDstReply{} }
func (*GtpuSetTunnelDstReply) GetMessageName() string          { return "gtpu_set_tunnel_dst_reply" }
func (*GtpuSetTunnelDstReply) GetCrcString() string            { return "e8d4e804" }
func (*GtpuSetTunnelDstReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// GtpuStaleTunnelEvent represents VPP binary API message 'gtpu_stale_tunnel_event'.
type GtpuStaleTunnelEvent struct {
	PID        uint32
	SwIfIndex  InterfaceIndex
	SrcAddress Address
	DstAddress Address
	SrcTeid    uint32
	DstTeid    uint32
}

func (m *GtpuStaleTunnelEvent) Reset()                        { *m = GtpuStaleTunnelEvent{} }
func (*GtpuStaleTunnelEvent) GetMessageName() string          { return "gtpu_stale_tunnel_event" }
func (*GtpuStaleTunnelEvent) GetCrcString() string            { return "09d97dea" }
func (*GtpuStaleTunnelEvent) GetMessageType() api.MessageType { return api.EventMessage }

// GtpuTunnelDetails represents VPP binary API message 'gtpu_tunnel_details'.
type GtpuTunnelDetails struct {
	SwIfIndex      InterfaceIndex
	SrcAddress     Address
	DstAddress     Address
	McastSwIfIndex InterfaceIndex
	EncapVrfID     uint32
	DecapNextIndex uint32
	SrcTeid        uint32
	DstTeid        uint32
	IsStale        bool
}

func (m *GtpuTunnelDetails) Reset()                        { *m = GtpuTunnelDetails{} }
func (*GtpuTunnelDetails) GetMessageName() string          { return "gtpu_tunnel_details" }
func (*GtpuTunnelDetails) GetCrcString() string            { return "c3b8e370" }
func (*GtpuTunnelDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// GtpuTunnelDump represents VPP binary API message 'gtpu_tunnel_dump'.
type GtpuTunnelDump struct {
	SwIfIndex InterfaceIndex
}

func (m *GtpuTunnelDump) Reset()                        { *m = GtpuTunnelDump{} }
func (*GtpuTunnelDump) GetMessageName() string          { return "gtpu_tunnel_dump" }
func (*GtpuTunnelDump) GetCrcString() string            { return "f9e6675e" }
func (*GtpuTunnelDump) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetGtpuBypass represents VPP binary API message 'sw_interface_set_gtpu_bypass'.
type SwInterfaceSetGtpuBypass struct {
	SwIfIndex InterfaceIndex
	IsIPv6    bool
	Enable    bool
}

func (m *SwInterfaceSetGtpuBypass) Reset()                        { *m = SwInterfaceSetGtpuBypass{} }
func (*SwInterfaceSetGtpuBypass) GetMessageName() string          { return "sw_interface_set_gtpu_bypass" }
func (*SwInterfaceSetGtpuBypass) GetCrcString() string            { return "65247409" }
func (*SwInterfaceSetGtpuBypass) GetMessageType() api.MessageType { return api.RequestMessage }

// SwInterfaceSetGtpuBypassReply represents VPP binary API message 'sw_interface_set_gtpu_bypass_reply'.
type SwInterfaceSetGtpuBypassReply struct {
	Retval int32
}

func (m *SwInterfaceSetGtpuBypassReply) Reset() { *m = SwInterfaceSetGtpuBypassReply{} }
func (*SwInterfaceSetGtpuBypassReply) GetMessageName() string {
	return "sw_interface_set_gtpu_bypass_reply"
}
func (*SwInterfaceSetGtpuBypassReply) GetCrcString() string            { return "e8d4e804" }
func (*SwInterfaceSetGtpuBypassReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// WantGtpuStaleTunnelEvents represents VPP binary API message 'want_gtpu_stale_tunnel_events'.
type WantGtpuStaleTunnelEvents struct {
	EnableDisable uint32
	PID           uint32
}

func (m *WantGtpuStaleTunnelEvents) Reset()                        { *m = WantGtpuStaleTunnelEvents{} }
func (*WantGtpuStaleTunnelEvents) GetMessageName() string          { return "want_gtpu_stale_tunnel_events" }
func (*WantGtpuStaleTunnelEvents) GetCrcString() string            { return "476f5a08" }
func (*WantGtpuStaleTunnelEvents) GetMessageType() api.MessageType { return api.RequestMessage }

// WantGtpuStaleTunnelEventsReply represents VPP binary API message 'want_gtpu_stale_tunnel_events_reply'.
type WantGtpuStaleTunnelEventsReply struct {
	Retval int32
}

func (m *WantGtpuStaleTunnelEventsReply) Reset() { *m = WantGtpuStaleTunnelEventsReply{} }
func (*WantGtpuStaleTunnelEventsReply) GetMessageName() string {
	return "want_gtpu_stale_tunnel_events_reply"
}
func (*WantGtpuStaleTunnelEventsReply) GetCrcString() string            { return "e8d4e804" }
func (*WantGtpuStaleTunnelEventsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

func init() {
	api.RegisterMessage((*GtpuAddDelLocalResponder)(nil), "gtpu.GtpuAddDelLocalResponder")
	api.RegisterMessage((*GtpuAddDelLocalResponderReply)(nil), "gtpu.GtpuAddDelLocalResponderReply")
	api.RegisterMessage((*GtpuAddDelTunnel)(nil), "gtpu.GtpuAddDelTunnel")
	api.RegisterMessage((*GtpuAddDelTunnelReply)(nil), "gtpu.GtpuAddDelTunnelReply")
	api.RegisterMessage((*GtpuLocalResponderDetails)(nil), "gtpu.GtpuLocalResponderDetails")
	api.RegisterMessage((*GtpuLocalResponderDump)(nil), "gtpu.GtpuLocalResponderDump")
	api.RegisterMessage((*GtpuSetTunnelDst)(nil), "gtpu.GtpuSetTunnelDst")
	api.RegisterMessage((*GtpuSetTunnelDstReply)(nil), "gtpu.GtpuSetTunnelDstReply")
	api.RegisterMessage((*GtpuStaleTunnelEvent)(nil), "gtpu.GtpuStaleTunnelEvent")
	api.RegisterMessage((*GtpuTunnelDetails)(nil), "gtpu.GtpuTunnelDetails")
	api.RegisterMessage((*GtpuTunnelDump)(nil), "gtpu.GtpuTunnelDump")
	api.RegisterMessage((*SwInterfaceSetGtpuBypass)(nil), "gtpu.SwInterfaceSetGtpuBypass")
	api.RegisterMessage((*SwInterfaceSetGtpuBypassReply)(nil), "gtpu.SwInterfaceSetGtpuBypassReply")
	api.RegisterMessage((*WantGtpuStaleTunnelEvents)(nil), "gtpu.WantGtpuStaleTunnelEvents")
	api.RegisterMessage((*WantGtpuStaleTunnelEventsReply)(nil), "gtpu.WantGtpuStaleTunnelEventsReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*GtpuAddDelLocalResponder)(nil),
		(*GtpuAddDelLocalResponderReply)(nil),
		(*GtpuAddDelTunnel)(nil),
		(*GtpuAddDelTunnelReply)(nil),
		(*GtpuLocalResponderDetails)(nil),
		(*GtpuLocalResponderDump)(nil),
		(*GtpuSetTunnelDst)(nil),
		(*GtpuSetTunnelDstReply)(nil),
		(*GtpuStaleTunnelEvent)(nil),
		(*GtpuTunnelDetails)(nil),
		(*GtpuTunnelDump)(nil),
		(*SwInterfaceSetGtpuBypass)(nil),
		(*SwInterfaceSetGtpuBypassReply)(nil),
		(*WantGtpuStaleTunnelEvents)(nil),
		(*WantGtpuStaleTunnelEventsReply)(nil),
	}
}

// RPCService represents RPC service API for gtpu module.
type RPCService interface {
	DumpGtpuLocalResponder(ctx context.Context, in *GtpuLocalResponderDump) (RPCService_DumpGtpuLocalResponderClient, error)
	DumpGtpuTunnel(ctx context.Context, in *GtpuTunnelDump) (RPCService_DumpGtpuTunnelClient, error)
	GtpuAddDelLocalResponder(ctx context.Context, in *GtpuAddDelLocalResponder) (*GtpuAddDelLocalResponderReply, error)
	GtpuAddDelTunnel(ctx context.Context, in *GtpuAddDelTunnel) (*GtpuAddDelTunnelReply, error)
	GtpuSetTunnelDst(ctx context.Context, in *GtpuSetTunnelDst) (*GtpuSetTunnelDstReply, error)
	SwInterfaceSetGtpuBypass(ctx context.Context, in *SwInterfaceSetGtpuBypass) (*SwInterfaceSetGtpuBypassReply, error)
	WantGtpuStaleTunnelEvents(ctx context.Context, in *WantGtpuStaleTunnelEvents) (*WantGtpuStaleTunnelEventsReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpGtpuLocalResponder(ctx context.Context, in *GtpuLocalResponderDump) (RPCService_DumpGtpuLocalResponderClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGtpuLocalResponderClient{stream}
	return x, nil
}

type RPCService_DumpGtpuLocalResponderClient interface {
	Recv() (*GtpuLocalResponderDetails, error)
}

type serviceClient_DumpGtpuLocalResponderClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGtpuLocalResponderClient) Recv() (*GtpuLocalResponderDetails, error) {
	m := new(GtpuLocalResponderDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpGtpuTunnel(ctx context.Context, in *GtpuTunnelDump) (RPCService_DumpGtpuTunnelClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpGtpuTunnelClient{stream}
	return x, nil
}

type RPCService_DumpGtpuTunnelClient interface {
	Recv() (*GtpuTunnelDetails, error)
}

type serviceClient_DumpGtpuTunnelClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpGtpuTunnelClient) Recv() (*GtpuTunnelDetails, error) {
	m := new(GtpuTunnelDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) GtpuAddDelLocalResponder(ctx context.Context, in *GtpuAddDelLocalResponder) (*GtpuAddDelLocalResponderReply, error) {
	out := new(GtpuAddDelLocalResponderReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GtpuAddDelTunnel(ctx context.Context, in *GtpuAddDelTunnel) (*GtpuAddDelTunnelReply, error) {
	out := new(GtpuAddDelTunnelReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GtpuSetTunnelDst(ctx context.Context, in *GtpuSetTunnelDst) (*GtpuSetTunnelDstReply, error) {
	out := new(GtpuSetTunnelDstReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) SwInterfaceSetGtpuBypass(ctx context.Context, in *SwInterfaceSetGtpuBypass) (*SwInterfaceSetGtpuBypassReply, error) {
	out := new(SwInterfaceSetGtpuBypassReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) WantGtpuStaleTunnelEvents(ctx context.Context, in *WantGtpuStaleTunnelEvents) (*WantGtpuStaleTunnelEventsReply, error) {
	out := new(WantGtpuStaleTunnelEventsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
